# This is an **example** API to demonstrate features of OpenAPI specification.
# It doesn't cover all OpenAPI features. For more full example check out: https://github.com/APIs-guru/petstore_extended

openapi: 3.0.0
info:
  version: '1.0.0' # Your API version
  # It can be any string but it is better to use semantic versioning: http://semver.org/
  # Warning: OpenAPI require version to be string, but without quotation YAML can recognize it as number.
  
  title: 头版新闻 # Replace with your API title
  # Keep it simple. Don't add "API" or version at the end of the string.

  #termsOfService: 'https://example.com/terms/' # [Optional] Replace with an URL to your ToS
  #contact:
  #  email: contact@example.com # [Optional] Replace with your contact email
  #  url: 'http://example.com/contact' # [Optional] Replace with link to your contact form
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://www.openapis.org/wp-content/uploads/sites/3/2018/02/OpenAPI_Logo_Pantone-1.png'
  
  # Describe your API here, you can use GFM (https://guides.github.com/features/mastering-markdown) here
  description: |
    头版新闻服务的 API 文档
#externalDocs:
 # description: Find out how to create Github repo for your OpenAPI spec.
 # url: 'https://github.com/Rebilly/generator-openapi-repo'

# A list of tags used by the specification with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: Type
    description: 新闻栏目相关
  - name: List
    description: 新闻列表相关
servers:
  - url: 'http://139.198.4.126:8080'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL. 
paths:
  /news/type:
    get:
      tags: 
       - Type
      summary: 获取新闻栏目
      operationId: getNewsType
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              
              schema: # response schema can be specified for each response
                type: object
                properties:
                  state:
                    description: 返回的状态，始终为true
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: ""
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Type'
  /news/list:
    get:
      parameters: 
        - name: id
          required: false
          in: query
          description: 新闻栏目 id
          schema:
            type: integer
            example: 1
        - name: index
          required:  true
          in: query
          description: 新闻列表的野马编号
          schema:
            type: integer
            example: 1
          
      tags: 
       - List
      summary: 获取新闻列表
      operationId: getNewsList
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              
              schema: # response schema can be specified for each response
                type: object
                properties:
                  state:
                    description: 返回的状态，始终为true
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: ""
                  data:
                    $ref: '#/components/schemas/List'
                

        
# An object to hold reusable parts that can be used across the spec
components:
  schemas:
    Type:
      type: object
      required: [id, title, order]
      properties:
        id: 
          description: 栏目 id
          type: integer
          example: 1
        title: 
          description: 栏目标题
          type: string
          example: 头条
        order: 
          description: 栏目次序编号
          type: integer
          example: 1
    List:
      type: array
      maxItems: 10
      items:
        type: object
        required: [uniquekey, title, date, author_name, url]
        properties:
          uniquekey: 
            description: 新闻条目的全局唯一key
            type: string
            example: f27589a0ea4ff36cdfc8b4b03693bbde
          title: 
            description: 新闻条目的标题
            type: string
            example: 王中王！德约一稳定江山，大满贯稳步追赶或成最终赢家
          date: 
            description: 新闻条目的发表时间
            type: string
            format: date-time
            example: 2019-07-15 10:50
          author_name: 
            description: 新闻条目的来源
            type: string
            example: 胖哥体育
          url: 
            description: 新闻条目的详情页面的完整 url
            type: string
            format: url
            example: http://mini.eastday.com/mobile/190715105025650.html
          thumbnail_pic_s: 
            description: 新闻条目的缩略图1的相对路径，需要和 baseURL 拼接
            type: string
            example: 20190715105025_878317e185cc8776106d73d76be366c6_3_mwpm_03200403.jpg
          thumbnail_pic_s02: 
            description: 新闻条目的缩略图1的相对路径，需要和 baseURL 拼接
            type: string
            example: 20190715105025_878317e185cc8776106d73d76be366c6_2_mwpm_03200403.jpg
          thumbnail_pic_s03: 
            description: 新闻条目的缩略图1的相对路径，需要和 baseURL 拼接
            type: string
            example: 20190715105025_878317e185cc8776106d73d76be366c6_1_mwpm_03200403.jpg
        
    